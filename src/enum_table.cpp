/* Copyright Â© 2008-2014 Pioneer Developers. See AUTHORS.txt for details */
/* Licensed under the terms of the GPL v3. See licenses/GPL-3.txt        */

/* THIS FILE IS AUTO-GENERATED, CHANGES WILL BE OVERWRITTEN */
/* enum table generated by scan_enums.py */

#include "enum_table.h"
#include "Object.h"
#include "Ship.h"
#include "ShipType.h"
#include "galaxy/StarSystem.h"
#include "gameui/Face.h"
#include "scenegraph/Model.h"
#include "ui/Align.h"
#include "ui/Animation.h"
#include "ui/Event.h"
#include "ui/Expand.h"
#include "ui/Gradient.h"
#include "ui/Margin.h"
#include "ui/NumberLabel.h"
#include "ui/Table.h"
#include "ui/Widget.h"

const struct EnumItem ENUM_PhysicsObjectType[] = {
	{ "BODY", Object::BODY },
	{ "MODELBODY", Object::MODELBODY },
	{ "SHIP", Object::SHIP },
	{ "PLAYER", Object::PLAYER },
	{ "SPACESTATION", Object::SPACESTATION },
	{ "PLANET", Object::PLANET },
	{ "STAR", Object::STAR },
	{ "MISSILE", Object::MISSILE },
	{ 0, 0 },
};

const struct EnumItem ENUM_ShipFlightState[] = {
	{ "FLYING", Ship::FLYING },
	{ "DOCKING", Ship::DOCKING },
	{ "DOCKED", Ship::DOCKED },
	{ "LANDED", Ship::LANDED },
	{ "JUMPING", Ship::JUMPING },
	{ "HYPERSPACE", Ship::HYPERSPACE },
	{ 0, 0 },
};

const struct EnumItem ENUM_ShipJumpStatus[] = {
	{ "OK", Ship::HYPERJUMP_OK },
	{ "CURRENT_SYSTEM", Ship::HYPERJUMP_CURRENT_SYSTEM },
	{ "NO_DRIVE", Ship::HYPERJUMP_NO_DRIVE },
	{ "INITIATED", Ship::HYPERJUMP_INITIATED },
	{ "DRIVE_ACTIVE", Ship::HYPERJUMP_DRIVE_ACTIVE },
	{ "OUT_OF_RANGE", Ship::HYPERJUMP_OUT_OF_RANGE },
	{ "SAFETY_LOCKOUT", Ship::HYPERJUMP_SAFETY_LOCKOUT },
	{ 0, 0 },
};

const struct EnumItem ENUM_ShipAIError[] = {
	{ "NONE", Ship::AIERROR_NONE },
	{ "GRAV_TOO_HIGH", Ship::AIERROR_GRAV_TOO_HIGH },
	{ "REFUSED_PERM", Ship::AIERROR_REFUSED_PERM },
	{ "ORBIT_IMPOSSIBLE", Ship::AIERROR_ORBIT_IMPOSSIBLE },
	{ 0, 0 },
};

const struct EnumItem ENUM_ShipTypeThruster[] = {
	{ "REVERSE", ShipType::THRUSTER_REVERSE },
	{ "FORWARD", ShipType::THRUSTER_FORWARD },
	{ "UP", ShipType::THRUSTER_UP },
	{ "DOWN", ShipType::THRUSTER_DOWN },
	{ "LEFT", ShipType::THRUSTER_LEFT },
	{ "RIGHT", ShipType::THRUSTER_RIGHT },
	{ 0, 0 },
};

const struct EnumItem ENUM_DualLaserOrientation[] = {
	{ "HORIZONTAL", ShipType::DUAL_LASERS_HORIZONTAL },
	{ "VERTICAL", ShipType::DUAL_LASERS_VERTICAL },
	{ 0, 0 },
};

const struct EnumItem ENUM_ShipTypeTag[] = {
	{ "NONE", ShipType::TAG_NONE },
	{ "SHIP", ShipType::TAG_SHIP },
	{ "STATIC_SHIP", ShipType::TAG_STATIC_SHIP },
	{ "MISSILE", ShipType::TAG_MISSILE },
	{ 0, 0 },
};

const struct EnumItem ENUM_BodyType[] = {
	{ "GRAVPOINT", SystemBody::TYPE_GRAVPOINT },
	{ "BROWN_DWARF", SystemBody::TYPE_BROWN_DWARF },
	{ "WHITE_DWARF", SystemBody::TYPE_WHITE_DWARF },
	{ "STAR_M", SystemBody::TYPE_STAR_M },
	{ "STAR_K", SystemBody::TYPE_STAR_K },
	{ "STAR_G", SystemBody::TYPE_STAR_G },
	{ "STAR_F", SystemBody::TYPE_STAR_F },
	{ "STAR_A", SystemBody::TYPE_STAR_A },
	{ "STAR_B", SystemBody::TYPE_STAR_B },
	{ "STAR_O", SystemBody::TYPE_STAR_O },
	{ "STAR_M_GIANT", SystemBody::TYPE_STAR_M_GIANT },
	{ "STAR_K_GIANT", SystemBody::TYPE_STAR_K_GIANT },
	{ "STAR_G_GIANT", SystemBody::TYPE_STAR_G_GIANT },
	{ "STAR_F_GIANT", SystemBody::TYPE_STAR_F_GIANT },
	{ "STAR_A_GIANT", SystemBody::TYPE_STAR_A_GIANT },
	{ "STAR_B_GIANT", SystemBody::TYPE_STAR_B_GIANT },
	{ "STAR_O_GIANT", SystemBody::TYPE_STAR_O_GIANT },
	{ "STAR_M_SUPER_GIANT", SystemBody::TYPE_STAR_M_SUPER_GIANT },
	{ "STAR_K_SUPER_GIANT", SystemBody::TYPE_STAR_K_SUPER_GIANT },
	{ "STAR_G_SUPER_GIANT", SystemBody::TYPE_STAR_G_SUPER_GIANT },
	{ "STAR_F_SUPER_GIANT", SystemBody::TYPE_STAR_F_SUPER_GIANT },
	{ "STAR_A_SUPER_GIANT", SystemBody::TYPE_STAR_A_SUPER_GIANT },
	{ "STAR_B_SUPER_GIANT", SystemBody::TYPE_STAR_B_SUPER_GIANT },
	{ "STAR_O_SUPER_GIANT", SystemBody::TYPE_STAR_O_SUPER_GIANT },
	{ "STAR_M_HYPER_GIANT", SystemBody::TYPE_STAR_M_HYPER_GIANT },
	{ "STAR_K_HYPER_GIANT", SystemBody::TYPE_STAR_K_HYPER_GIANT },
	{ "STAR_G_HYPER_GIANT", SystemBody::TYPE_STAR_G_HYPER_GIANT },
	{ "STAR_F_HYPER_GIANT", SystemBody::TYPE_STAR_F_HYPER_GIANT },
	{ "STAR_A_HYPER_GIANT", SystemBody::TYPE_STAR_A_HYPER_GIANT },
	{ "STAR_B_HYPER_GIANT", SystemBody::TYPE_STAR_B_HYPER_GIANT },
	{ "STAR_O_HYPER_GIANT", SystemBody::TYPE_STAR_O_HYPER_GIANT },
	{ "STAR_M_WF", SystemBody::TYPE_STAR_M_WF },
	{ "STAR_B_WF", SystemBody::TYPE_STAR_B_WF },
	{ "STAR_O_WF", SystemBody::TYPE_STAR_O_WF },
	{ "STAR_S_BH", SystemBody::TYPE_STAR_S_BH },
	{ "STAR_IM_BH", SystemBody::TYPE_STAR_IM_BH },
	{ "STAR_SM_BH", SystemBody::TYPE_STAR_SM_BH },
	{ "PLANET_GAS_GIANT", SystemBody::TYPE_PLANET_GAS_GIANT },
	{ "PLANET_ASTEROID", SystemBody::TYPE_PLANET_ASTEROID },
	{ "PLANET_TERRESTRIAL", SystemBody::TYPE_PLANET_TERRESTRIAL },
	{ "STARPORT_ORBITAL", SystemBody::TYPE_STARPORT_ORBITAL },
	{ "STARPORT_SURFACE", SystemBody::TYPE_STARPORT_SURFACE },
	{ 0, 0 },
};

const struct EnumItem ENUM_BodySuperType[] = {
	{ "NONE", SystemBody::SUPERTYPE_NONE },
	{ "STAR", SystemBody::SUPERTYPE_STAR },
	{ "ROCKY_PLANET", SystemBody::SUPERTYPE_ROCKY_PLANET },
	{ "GAS_GIANT", SystemBody::SUPERTYPE_GAS_GIANT },
	{ "STARPORT", SystemBody::SUPERTYPE_STARPORT },
	{ 0, 0 },
};

const struct EnumItem ENUM_GameUIFaceFlags[] = {
	{ "RAND", GameUI::Face::RAND },
	{ "MALE", GameUI::Face::MALE },
	{ "FEMALE", GameUI::Face::FEMALE },
	{ "ARMOUR", GameUI::Face::ARMOUR },
	{ 0, 0 },
};

const struct EnumItem ENUM_ModelDebugFlags[] = {
	{ "NONE", SceneGraph::Model::DEBUG_NONE },
	{ "BBOX", SceneGraph::Model::DEBUG_BBOX },
	{ "COLLMESH", SceneGraph::Model::DEBUG_COLLMESH },
	{ "WIREFRAME", SceneGraph::Model::DEBUG_WIREFRAME },
	{ "TAGS", SceneGraph::Model::DEBUG_TAGS },
	{ "DOCKING", SceneGraph::Model::DEBUG_DOCKING },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIAlignDirection[] = {
	{ "TOP_LEFT", UI::Align::TOP_LEFT },
	{ "TOP", UI::Align::TOP },
	{ "TOP_RIGHT", UI::Align::TOP_RIGHT },
	{ "LEFT", UI::Align::LEFT },
	{ "MIDDLE", UI::Align::MIDDLE },
	{ "RIGHT", UI::Align::RIGHT },
	{ "BOTTOM_LEFT", UI::Align::BOTTOM_LEFT },
	{ "BOTTOM", UI::Align::BOTTOM },
	{ "BOTTOM_RIGHT", UI::Align::BOTTOM_RIGHT },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIAnimationType[] = {
	{ "IN", UI::Animation::TYPE_IN },
	{ "OUT", UI::Animation::TYPE_OUT },
	{ "IN_OUT", UI::Animation::TYPE_IN_OUT },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIAnimationEasing[] = {
	{ "ZERO", UI::Animation::EASING_ZERO },
	{ "ONE", UI::Animation::EASING_ONE },
	{ "LINEAR", UI::Animation::EASING_LINEAR },
	{ "QUAD", UI::Animation::EASING_QUAD },
	{ "CUBIC", UI::Animation::EASING_CUBIC },
	{ "QUART", UI::Animation::EASING_QUART },
	{ "QUINT", UI::Animation::EASING_QUINT },
	{ "SINE", UI::Animation::EASING_SINE },
	{ "EXPO", UI::Animation::EASING_EXPO },
	{ "CIRC", UI::Animation::EASING_CIRC },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIAnimationTarget[] = {
	{ "PAUSE", UI::Animation::TARGET_PAUSE },
	{ "OPACITY", UI::Animation::TARGET_OPACITY },
	{ "POSITION_X", UI::Animation::TARGET_POSITION_X },
	{ "POSITION_Y", UI::Animation::TARGET_POSITION_Y },
	{ "POSITION_X_REV", UI::Animation::TARGET_POSITION_X_REV },
	{ "POSITION_Y_REV", UI::Animation::TARGET_POSITION_Y_REV },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIEventType[] = {
	{ "KEYBOARD", UI::Event::KEYBOARD },
	{ "TEXT_INPUT", UI::Event::TEXT_INPUT },
	{ "MOUSE_BUTTON", UI::Event::MOUSE_BUTTON },
	{ "MOUSE_MOTION", UI::Event::MOUSE_MOTION },
	{ "MOUSE_WHEEL", UI::Event::MOUSE_WHEEL },
	{ "JOYSTICK_AXIS_MOTION", UI::Event::JOYSTICK_AXIS_MOTION },
	{ "JOYSTICK_HAT_MOTION", UI::Event::JOYSTICK_HAT_MOTION },
	{ "JOYSTICK_BUTTON", UI::Event::JOYSTICK_BUTTON },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIKeyboardAction[] = {
	{ "DOWN", UI::KeyboardEvent::KEY_DOWN },
	{ "UP", UI::KeyboardEvent::KEY_UP },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIMouseButtonAction[] = {
	{ "DOWN", UI::MouseButtonEvent::BUTTON_DOWN },
	{ "UP", UI::MouseButtonEvent::BUTTON_UP },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIMouseButtonType[] = {
	{ "LEFT", UI::MouseButtonEvent::BUTTON_LEFT },
	{ "MIDDLE", UI::MouseButtonEvent::BUTTON_MIDDLE },
	{ "RIGHT", UI::MouseButtonEvent::BUTTON_RIGHT },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIMouseWheelDirection[] = {
	{ "UP", UI::MouseWheelEvent::WHEEL_UP },
	{ "DOWN", UI::MouseWheelEvent::WHEEL_DOWN },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIJoystickHatDirection[] = {
	{ "CENTRE", UI::JoystickHatMotionEvent::HAT_CENTRE },
	{ "UP", UI::JoystickHatMotionEvent::HAT_UP },
	{ "RIGHT", UI::JoystickHatMotionEvent::HAT_RIGHT },
	{ "DOWN", UI::JoystickHatMotionEvent::HAT_DOWN },
	{ "LEFT", UI::JoystickHatMotionEvent::HAT_LEFT },
	{ "RIGHTUP", UI::JoystickHatMotionEvent::HAT_RIGHTUP },
	{ "RIGHTDOWN", UI::JoystickHatMotionEvent::HAT_RIGHTDOWN },
	{ "LEFTUP", UI::JoystickHatMotionEvent::HAT_LEFTUP },
	{ "LEFTDOWN", UI::JoystickHatMotionEvent::HAT_LEFTDOWN },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIJoystickButtonAction[] = {
	{ "DOWN", UI::JoystickButtonEvent::BUTTON_DOWN },
	{ "UP", UI::JoystickButtonEvent::BUTTON_UP },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIExpandDirection[] = {
	{ "BOTH", UI::Expand::BOTH },
	{ "HORIZONTAL", UI::Expand::HORIZONTAL },
	{ "VERTICAL", UI::Expand::VERTICAL },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIGradientDirection[] = {
	{ "HORIZONTAL", UI::Gradient::HORIZONTAL },
	{ "VERTICAL", UI::Gradient::VERTICAL },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIMarginDirection[] = {
	{ "ALL", UI::Margin::ALL },
	{ "HORIZONTAL", UI::Margin::HORIZONTAL },
	{ "VERTICAL", UI::Margin::VERTICAL },
	{ "LEFT", UI::Margin::LEFT },
	{ "RIGHT", UI::Margin::RIGHT },
	{ "TOP", UI::Margin::TOP },
	{ "BOTTOM", UI::Margin::BOTTOM },
	{ 0, 0 },
};

const struct EnumItem ENUM_UINumberLabelFormat[] = {
	{ "NUMBER", UI::NumberLabel::FORMAT_NUMBER },
	{ "NUMBER_2DP", UI::NumberLabel::FORMAT_NUMBER_2DP },
	{ "INTEGER", UI::NumberLabel::FORMAT_INTEGER },
	{ "PERCENT", UI::NumberLabel::FORMAT_PERCENT },
	{ "PERCENT_INTEGER", UI::NumberLabel::FORMAT_PERCENT_INTEGER },
	{ "MONEY", UI::NumberLabel::FORMAT_MONEY },
	{ "MASS_TONNES", UI::NumberLabel::FORMAT_MASS_TONNES },
	{ 0, 0 },
};

const struct EnumItem ENUM_UITableRowAlignDirection[] = {
	{ "TOP", UI::Table::ROW_TOP },
	{ "CENTER", UI::Table::ROW_CENTER },
	{ "BOTTOM", UI::Table::ROW_BOTTOM },
	{ 0, 0 },
};

const struct EnumItem ENUM_UITableColumnAlignDirection[] = {
	{ "LEFT", UI::Table::COLUMN_LEFT },
	{ "CENTER", UI::Table::COLUMN_CENTER },
	{ "RIGHT", UI::Table::COLUMN_RIGHT },
	{ "JUSTIFY", UI::Table::COLUMN_JUSTIFY },
	{ 0, 0 },
};

const struct EnumItem ENUM_UISizeControl[] = {
	{ "NO_WIDTH", UI::Widget::NO_WIDTH },
	{ "NO_HEIGHT", UI::Widget::NO_HEIGHT },
	{ "EXPAND_WIDTH", UI::Widget::EXPAND_WIDTH },
	{ "EXPAND_HEIGHT", UI::Widget::EXPAND_HEIGHT },
	{ "PRESERVE_ASPECT", UI::Widget::PRESERVE_ASPECT },
	{ 0, 0 },
};

const struct EnumItem ENUM_UIFont[] = {
	{ "XSMALL", UI::Widget::FONT_XSMALL },
	{ "SMALL", UI::Widget::FONT_SMALL },
	{ "NORMAL", UI::Widget::FONT_NORMAL },
	{ "LARGE", UI::Widget::FONT_LARGE },
	{ "XLARGE", UI::Widget::FONT_XLARGE },
	{ "HEADING_XSMALL", UI::Widget::FONT_HEADING_XSMALL },
	{ "HEADING_SMALL", UI::Widget::FONT_HEADING_SMALL },
	{ "HEADING_NORMAL", UI::Widget::FONT_HEADING_NORMAL },
	{ "HEADING_LARGE", UI::Widget::FONT_HEADING_LARGE },
	{ "HEADING_XLARGE", UI::Widget::FONT_HEADING_XLARGE },
	{ "MONO_XSMALL", UI::Widget::FONT_MONO_XSMALL },
	{ "MONO_SMALL", UI::Widget::FONT_MONO_SMALL },
	{ "MONO_NORMAL", UI::Widget::FONT_MONO_NORMAL },
	{ "MONO_LARGE", UI::Widget::FONT_MONO_LARGE },
	{ "MONO_XLARGE", UI::Widget::FONT_MONO_XLARGE },
	{ "INHERIT", UI::Widget::FONT_INHERIT },
	{ 0, 0 },
};

const struct EnumTable ENUM_TABLES[] = {
	{ "PhysicsObjectType", ENUM_PhysicsObjectType },
	{ "ShipFlightState", ENUM_ShipFlightState },
	{ "ShipJumpStatus", ENUM_ShipJumpStatus },
	{ "ShipAIError", ENUM_ShipAIError },
	{ "ShipTypeThruster", ENUM_ShipTypeThruster },
	{ "DualLaserOrientation", ENUM_DualLaserOrientation },
	{ "ShipTypeTag", ENUM_ShipTypeTag },
	{ "BodyType", ENUM_BodyType },
	{ "BodySuperType", ENUM_BodySuperType },
	{ "GameUIFaceFlags", ENUM_GameUIFaceFlags },
	{ "ModelDebugFlags", ENUM_ModelDebugFlags },
	{ "UIAlignDirection", ENUM_UIAlignDirection },
	{ "UIAnimationType", ENUM_UIAnimationType },
	{ "UIAnimationEasing", ENUM_UIAnimationEasing },
	{ "UIAnimationTarget", ENUM_UIAnimationTarget },
	{ "UIEventType", ENUM_UIEventType },
	{ "UIKeyboardAction", ENUM_UIKeyboardAction },
	{ "UIMouseButtonAction", ENUM_UIMouseButtonAction },
	{ "UIMouseButtonType", ENUM_UIMouseButtonType },
	{ "UIMouseWheelDirection", ENUM_UIMouseWheelDirection },
	{ "UIJoystickHatDirection", ENUM_UIJoystickHatDirection },
	{ "UIJoystickButtonAction", ENUM_UIJoystickButtonAction },
	{ "UIExpandDirection", ENUM_UIExpandDirection },
	{ "UIGradientDirection", ENUM_UIGradientDirection },
	{ "UIMarginDirection", ENUM_UIMarginDirection },
	{ "UINumberLabelFormat", ENUM_UINumberLabelFormat },
	{ "UITableRowAlignDirection", ENUM_UITableRowAlignDirection },
	{ "UITableColumnAlignDirection", ENUM_UITableColumnAlignDirection },
	{ "UISizeControl", ENUM_UISizeControl },
	{ "UIFont", ENUM_UIFont },
	{ 0, 0 },
};

const struct EnumTable ENUM_TABLES_PUBLIC[] = {
	{ "PhysicsObjectType", ENUM_PhysicsObjectType },
	{ "ShipFlightState", ENUM_ShipFlightState },
	{ "ShipJumpStatus", ENUM_ShipJumpStatus },
	{ "ShipAIError", ENUM_ShipAIError },
	{ "ShipTypeThruster", ENUM_ShipTypeThruster },
	{ "DualLaserOrientation", ENUM_DualLaserOrientation },
	{ "ShipTypeTag", ENUM_ShipTypeTag },
	{ "BodyType", ENUM_BodyType },
	{ "BodySuperType", ENUM_BodySuperType },
	{ "GameUIFaceFlags", ENUM_GameUIFaceFlags },
	{ "ModelDebugFlags", ENUM_ModelDebugFlags },
	{ "UIAlignDirection", ENUM_UIAlignDirection },
	{ "UIAnimationType", ENUM_UIAnimationType },
	{ "UIAnimationEasing", ENUM_UIAnimationEasing },
	{ "UIAnimationTarget", ENUM_UIAnimationTarget },
	{ "UIEventType", ENUM_UIEventType },
	{ "UIKeyboardAction", ENUM_UIKeyboardAction },
	{ "UIMouseButtonAction", ENUM_UIMouseButtonAction },
	{ "UIMouseButtonType", ENUM_UIMouseButtonType },
	{ "UIMouseWheelDirection", ENUM_UIMouseWheelDirection },
	{ "UIJoystickHatDirection", ENUM_UIJoystickHatDirection },
	{ "UIJoystickButtonAction", ENUM_UIJoystickButtonAction },
	{ "UIExpandDirection", ENUM_UIExpandDirection },
	{ "UIGradientDirection", ENUM_UIGradientDirection },
	{ "UIMarginDirection", ENUM_UIMarginDirection },
	{ "UITableRowAlignDirection", ENUM_UITableRowAlignDirection },
	{ "UITableColumnAlignDirection", ENUM_UITableColumnAlignDirection },
	{ "UISizeControl", ENUM_UISizeControl },
	{ "UIFont", ENUM_UIFont },
	{ 0, 0 },
};
